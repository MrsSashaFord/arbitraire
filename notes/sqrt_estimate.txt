package main

import "fmt"
import "os"
import "math"
import "math/bits"
	func main() {
		file, err := os.Create("text.txt")
		if err != nil {
						return
	}
	defer file.Close()
	var i uint32 = 1
	for i < 1000 {
		var shift uint32 = 1
		shift=(30-LeadingZeros32(i))
		var answer uint32 = 1
		answer=(1<<(shift>>1))+(i>>((shift>>1)+2))
		// i answer goodanswer error
		file.WriteString(fmt.Sprintf("%d %d %d %d\n", i, answer, uint(math.Sqrt(float64(i))), i))
		i=i+1
	}
	}

16:31 < Naergon> graff: https://i.imgur.com/SvFyhB9.png
16:32 < Naergon> Here is the example of precision over range
16:32 -!- damke_ [~damke@unaffiliated/damke] has quit [Ping timeout: 263 seconds]
16:32 -!- blight [~greg@reactos/developer/blight] has quit [Quit: Konversation terminated!]
16:32 < Naergon> First guess VS the real sqrt
16:33 -!- BugCraft [~BugCraft@38.red-83-35-205.dynamicip.rima-tde.net] has quit [Ping timeout: 240 seconds]
16:33 -!- kaffeetrauma [~Thunderbi@p200300CF33DCFE00D5F20B4E24ED8B14.dip0.t-ipconnect.de] has quit [Ping timeout: 265 seconds]
16:33 -!- gb73d [~gb73d@host-92-24-44-147.ppp.as43234.net] has quit []
16:33 < graff> Naergon: nice
16:33 < Naergon> https://pastebin.com/raw/FTNPvhcy - here the golang code for it. and i can give gnuplot acript to draw it if you want to playaround
16:33 -!- kaffeetrauma [~Thunderbi@p200300CF33DCFE00D5F20B4E24ED8B14.dip0.t-ipconnect.de] has joined ##math
16:34 -!- sjl [~sjl@ec2-52-8-119-239.us-west-1.compute.amazonaws.com] has quit [Quit: WeeChat 1.9]
16:34 -!- jordanl [~jordan@unaffiliated/jordanl] has joined ##math
16:34 -!- Bilz [~billy@94.7.228.159] has quit [Ping timeout: 256 seconds]
16:35 < Naergon>  (1<<(shift>>1))+(i>>((shift>>1)+2)) - this is the magic that gives the answer
16:35 -!- oleo [~oleo@unaffiliated/oleo] has joined ##math
16:35 -!- YottaByte [~YottaByte@unaffiliated/yottabyte] has joined ##math
16:35 -!- mefistofeles [~mefistofe@unaffiliated/mefistofeles] has joined ##math
16:35 < Naergon> because i thought its mandatory
16:35 -!- listenmore [~strike@2.27.123.231] has quit [Remote host closed the connection]
16:36 -!- trututu [~textual@188.162.185.84] has quit [Quit: trututu]
16:36 -!- listenmore [~strike@2.27.123.231] has joined ##math
16:36 < Naergon> Okay then =) i might not out them next time
16:36 < Naergon> Put*
16:36 -!- bitd [~bitd@unaffiliated/bitd] has joined ##math
16:37 -!- trututu [~www@188.162.185.84] has joined ##math
16:37 -!- bitd [~bitd@unaffiliated/bitd] has quit [Remote host closed the connection]
16:37 -!- gelignite [~gelignite@55d4bfec.access.ecotel.net] has quit [Quit: I have always found that mercy bears richer fruits than strict justice.]
16:38 < Naergon> Yay =)
16:42 < Naergon> graff: as far as i know this is the best precisuon for a first guess that can be done with simple math. About 3-7 bits
16:43 -!- bor0 [~bor0@92.53.29.159] has joined ##math
16:43 -!- bor0 [~bor0@92.53.29.159] has quit [Changing host]
16:43 -!- bor0 [~bor0@unaffiliated/boro/x-000000001] has joined ##math
16:43 -!- Gustavo6041_ [~Gustavo60@177.97.117.157] has joined ##math
16:43 -!- Gustavo6046 [~Gustavo60@unaffiliated/gustavo6046] has quit [Read error: Connection reset by peer]
16:44 < okuu> baxx: Well, the official Go tutorial quotes its imports. It's only natural to think this is, if not the only, at least the recommended way to program.
16:44 < okuu> Errr, no, wait.
16:45 < okuu> Ah, yes, it was the official Go tutorial.
16:45 < Naergon> https://golang.org/pkg/math/bits/#LeadingZeros32
16:46 -!- Gustavo6041_ [~Gustavo60@177.97.117.157] has quit [Client Quit]
16:47 -!- Gustavo6046 [~Gustavo60@unaffiliated/gustavo6046] has joined ##math
16:47 -!- Karlo_ [~karl@2600:1700:f5a1:be0:8030:6f7b:f473:e33c] has joined ##math
16:48 -!- koro_ is now known as koro
16:49 < Naergon> Close enough, its some funky go =)
16:49 -!- Achylles [~Achylles@2804:431:d724:9081:7bdd:6ba4:88d7:929f] has quit [Read error: Connection reset by peer]
16:50 -!- trututu [~www@188.162.185.84] has quit [Quit: trututu]
16:50 < graff> Naergon: will I be able to translate this to an arbitrary precision technique?
16:50 < graff> just some logical shifting right?
16:51 < Naergon> Yes, just vhange the 30 into 62 or something else
16:51 -!- pytron [~pytron@pool-173-66-4-125.washdc.fios.verizon.net] has joined ##math
16:51 < graff> let me put it all in my notes, and if you want to email me at cm0graff@gmail.com it will allow me to be able to credit you
16:51 < Naergon> It works for any number of bits. But yourmprecision is limited to 7 bits
16:51 < higherorder> Is the relation xy = yx in a group an equivalence relation?
16:51 < graff> or you can also join #hlibc and just do the work yourself if you like. but either way let me slam all of this into my notes until I figure it out
16:52 < Karlo_> higherorder: No, it's not transitive (the identity commutes with everything, for example)

